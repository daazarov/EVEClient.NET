name: Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'

defaults:
  run:
    shell: pwsh
    
env:
  PROJECT: '.\src\EVEClient.NET\EVEClient.NET.csproj'
  NUGET_DIRECTORY: ${{ github.workspace}}/nuget

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    # Create the NuGet package in the folder from the environment variable NuGetDirectory
    - name: Pack
      run: dotnet pack ${{ env.PROJECT }} --configuration Release --output ${{ env.NUGET_DIRECTORY }} /p:Version=${{ github.ref_name }}

    # Publish the NuGet package as an artifact, so they can be used in the following jobs
    - name: Publish artifacts
      uses: actions/upload-artifact@v4.3.3
      with:
        name: nugets
        overwrite: true
        if-no-files-found: error
        path: ${{ env.NUGET_DIRECTORY }}/*.nupkg
        retention-days: 1

  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        
      - uses: actions/download-artifact@v4.1.7
        with:
          name: nugets
          path: ${{ env.NUGET_DIRECTORY }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NUGET_DIRECTORY }}/*.nupkg")
  
  publish_nuget:
    runs-on: ubuntu-latest
    needs: [ validate_nuget ]
    
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v4.1.7
      with:
        name: nugets
        path: ${{ env.NUGET_DIRECTORY }}
    
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
      run: dotnet nuget push nugets\*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
   
