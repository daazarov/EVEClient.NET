# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: [ "release/**" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "main" ]
    paths: 
    - '**.cs'
    - '**.csproj'
    - '**.sln'

jobs:
  build-and-test:
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: '.\src\EVEOnline.ESI.Communication.sln'
      UNIT_TESTS_PROJECT: '.\src\EVEOnline.ESI.Communication.UnitTests\EVEOnline.ESI.Communication.UnitTests.csproj'
      
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux
            
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore $SOLUTION
      
    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG --no-restore
      
    - name: Test
      run: dotnet test $UNIT_TESTS_PROJECT --configuration $BUILD_CONFIG -- NUnit.TestOutputXml=TestResults

    - name: NUnit Tests Report
      uses: daazarov/NUnitTestResultSummary@v1
      with:
        filename: src/EVEOnline.ESI.Communication.UnitTests/bin/Release/net7.0/TestResults/EVEOnline.ESI.Communication.UnitTests.xml
        badge: true
        format: markdown
        output: file
        passed: false
        skipped: false
        inconclusive: false        

    - name: Add unit tests PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: nunit-testresult-summary.md
